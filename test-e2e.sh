#!/usr/bin/env bash
set -euo pipefail

# Centralised, timestamped logging helper
log() {
  echo -e "ðŸ“‹ $(date '+%H:%M:%S') â€” $1"
}

# Helper: pretty-print JSON only if jq is available
pp_json() {
  if command -v jq >/dev/null 2>&1; then
    jq .
  else
    cat
  fi
}

# â”€â”€â”€â”€â”€â”€â”€â”€â”€ 0. Build & Up â”€â”€â”€â”€â”€â”€â”€â”€â”€
export JIRA_MOCK=true              # active JiraMockConfig
docker compose up -d --build       # compile & (re)lance tous les services
sleep 5                            # petit temps pour que Spring dÃ©marre

# â”€â”€â”€â”€â”€â”€â”€â”€â”€ 1. Unit-Tests Reporting â”€â”€â”€â”€â”€â”€â”€â”€â”€
log "Tests unitaires Reporting-Serviceâ€¦"
docker compose run --rm reporting-service \
       mvn -q -pl reporting-service test
log "Unit tests OK"

# â”€â”€â”€â”€â”€â”€â”€â”€â”€ 2. Variables utiles â”€â”€â”€â”€â”€â”€â”€â”€â”€
source .env                         # RÃ©cupÃ¨re les ports
BASE_REP="http://localhost:${REPORTING_SERVICE_PORT}/api/reporting"
BASE_CHART="http://localhost:${CHART_SERVICE_PORT}/api/charts"
BASE_EMAIL="http://localhost:${EMAIL_SERVICE_PORT}/api/emails"
PROJECT_KEY="SCRUM"
IMG_PATH="/tmp/chart.png"

# â”€â”€â”€â”€â”€â”€â”€â”€â”€ 3. Reporting â”€â”€â”€â”€â”€â”€â”€â”€â”€
log "Rapport mensuel ${PROJECT_KEY}"
curl -s "${BASE_REP}/monthly?projectKey=${PROJECT_KEY}" | pp_json | tee report.json
log "Report saved to report.json"

# â”€â”€â”€â”€â”€â”€â”€â”€â”€ 4. Chart â”€â”€â”€â”€â”€â”€â”€â”€â”€
log "Chart mensuel"
curl -s "${BASE_CHART}/monthly/summary?projectKey=${PROJECT_KEY}" -o "${IMG_PATH}"
log "Chart sauvÃ© â†’ ${IMG_PATH}"

# â”€â”€â”€â”€â”€â”€â”€â”€â”€ 5. Email â”€â”€â”€â”€â”€â”€â”€â”€â”€
log "Envoi e-mailâ€¦"
curl -s -X POST "${BASE_EMAIL}/send/chart" \
     -F "request={\"to\":\"${MAIL_USERNAME}\",\"subject\":\"Chart ${PROJECT_KEY}\",\"templateData\":{\"projectKey\":\"${PROJECT_KEY}\",\"chartType\":\"monthly\"},\"priority\":\"LOW\"};type=application/json" \
     -F "file=@${IMG_PATH};type=image/png" | pp_json

# â”€â”€â”€â”€â”€â”€â”€â”€â”€ 6. Attente & VÃ©rification â”€â”€â”€â”€â”€â”€â”€â”€â”€
log "Attente de 10 s pour traitement en arriÃ¨re-plan"
sleep 10
log "Test terminÃ©. VÃ©rifiez votre boÃ®te mail (${MAIL_USERNAME}) et les derniers logs du service e-mail :"
docker compose logs --tail=20 email-service

log "Rapport JSON : report.json"
log "Chart PNG    : ${IMG_PATH}"
