services:
  jira-fetch-service:
    build:
      context: ./jira-fetch-service
      dockerfile: Dockerfile
    ports:
      - "${JIRA_FETCH_SERVICE_PORT:-8081}:8081"
    env_file: .env
    environment:
      - JIRA_BASE_URL=${JIRA_BASE_URL:-http://localhost}
      - JIRA_USERNAME=${JIRA_USERNAME:-user}
      - JIRA_API_TOKEN=${JIRA_API_TOKEN:-token}
      - JIRA_FETCH_SERVICE_PORT=${JIRA_FETCH_SERVICE_PORT:-8081}
      - SPRING_R2DBC_URL=${SPRING_R2DBC_URL:-r2dbc:postgresql://postgres:5432/jira_db}
      - SPRING_R2DBC_USERNAME=${SPRING_R2DBC_USERNAME:-jira}
      - SPRING_R2DBC_PASSWORD=${SPRING_R2DBC_PASSWORD:-postgres}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${SPRING_KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
      - EUREKA_CLIENT_ENABLED=false
      - SPRING_CLOUD_DISCOVERY_ENABLED=false
    depends_on:
      - postgres
      - kafka

  reporting-service:
    build:
      context: ./reporting-service
      dockerfile: Dockerfile
    ports:
      - "${REPORTING_SERVICE_PORT:-8082}:8082"
    env_file: .env
    environment:
      - REPORTING_SERVICE_PORT=${REPORTING_SERVICE_PORT:-8082}
      - JIRA_FETCH_BASE_URL=${JIRA_FETCH_BASE_URL:-http://jira-fetch-service:8081}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-}
      - SPRING_SQL_INIT_MODE=never
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${SPRING_KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
      - SPRING_R2DBC_URL=${SPRING_R2DBC_URL:-r2dbc:postgresql://postgres:5432/jira_db}
      - SPRING_R2DBC_USERNAME=${SPRING_R2DBC_USERNAME:-jira}
      - SPRING_R2DBC_PASSWORD=${SPRING_R2DBC_PASSWORD:-postgres}
      - EUREKA_CLIENT_ENABLED=false
      - SPRING_CLOUD_DISCOVERY_ENABLED=false
    depends_on:
      - jira-fetch-service
      - kafka

  chart-service:
    build:
        context: ./chart-service
        dockerfile: Dockerfile
    ports:
      - "${CHART_SERVICE_PORT:-8083}:8083"
    env_file: .env
    environment:
      - REPORTING_SERVICE_URL=${REPORTING_SERVICE_URL:-http://reporting-service:8082}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${SPRING_KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
      - EUREKA_CLIENT_ENABLED=false
      - SPRING_CLOUD_DISCOVERY_ENABLED=false
    depends_on:
      - reporting-service
      - kafka

  email-service:
    build: 
      context: ./email-service
      dockerfile: Dockerfile
    ports:
      - "${EMAIL_SERVICE_PORT:-8084}:8084"
    env_file: .env
    depends_on:
      - redis
      - rabbitmq
      - kafka
    environment:
      - SPRING_RABBITMQ_HOST=${SPRING_RABBITMQ_HOST:-rabbitmq}
      - SPRING_DATA_REDIS_HOST=${SPRING_DATA_REDIS_HOST:-redis}
      - SPRING_DATA_REDIS_PORT=${SPRING_DATA_REDIS_PORT:-6379}
      - GMAIL_USERNAME=${GMAIL_USERNAME:-}
      - GMAIL_PASSWORD=${GMAIL_PASSWORD:-}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${SPRING_KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
      - EUREKA_CLIENT_ENABLED=false
      - SPRING_CLOUD_DISCOVERY_ENABLED=false

  excel-service:
    build:
      context: ./excel-service
      dockerfile: Dockerfile
    ports:
      - "${EXCEL_SERVICE_PORT:-8085}:8085"
    environment:
      - SPRING_R2DBC_URL=${SPRING_R2DBC_URL:-r2dbc:postgresql://postgres:5432/jira_db}
      - SPRING_R2DBC_USERNAME=${SPRING_R2DBC_USERNAME:-jira}
      - SPRING_R2DBC_PASSWORD=${SPRING_R2DBC_PASSWORD:-postgres}
      - EXCEL_REPORTS_DIR=/data
      - EXCEL_CHECKPOINT_DIR=/data
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${SPRING_KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
      - EUREKA_CLIENT_ENABLED=false
      - SPRING_CLOUD_DISCOVERY_ENABLED=false
    env_file: .env 
    volumes:
      - /Users/youssefouriniche/Desktop/reportsExcel:/data
    depends_on:
      - postgres
      - kafka

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS:-guest}

  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-jira_db}
      - POSTGRES_USER=${POSTGRES_USER:-jira}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ./reporting-service/src/main/resources/data-test.sql:/docker-entrypoint-initdb.d/data-test.sql:ro

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]

  zookeeper:
    image: bitnami/zookeeper:3
    ports: ["2181:2181"]
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3
    ports: 
      - "${KAFKA_PORT:-9092}:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: yes

  db-seeder:
    image: postgres:16
    depends_on:
      - postgres
    env_file: .env
    environment:
      - PGPASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./reporting-service/src/main/resources/data-test.sql:/seed.sql:ro
    entrypoint: [ "bash", "-lc", "
      until pg_isready -h postgres -U ${POSTGRES_USER:-jira} >/dev/null 2>&1; do sleep 1; done;
      echo 'Seeding test data...';
      psql -h postgres -U ${POSTGRES_USER:-jira} -d ${POSTGRES_DB:-jira_db} -f /seed.sql
     " ]
    restart: "no"


volumes:
  postgres_data:
